/*
DROP VIEW tankInfoShort
DROP VIEW playerTankInfoBattleCount
DROP VIEW json2dbMappingView
DROP VIEW tankData2BattleMappingView
DROP VIEW battleResultView
*/
GO


-- Create view showing tank data short info

CREATE VIEW tankInfoShort
AS
SELECT   tank.Id AS TankID, tank.name AS Tank, tankType.name AS Tanktype, country.name AS Country
FROM     country INNER JOIN
         tank ON country.Id = tank.countryId INNER JOIN
         tankType ON tank.tankTypeId = tankType.ID
GO


-- Create view showing player tanks, short tank info and battle count

CREATE VIEW PlayerTankStatsView
AS
SELECT   player.name AS Playername, tank.name AS Tank, tank.tier AS Tier, tankType.name AS Tanktype, country.name AS Country, 
         playerTank.battles15 AS [Battles 15x15], playerTank.battles7 AS [Battles 7x7], playerTank.wn8 AS WN8, playerTank.eff AS Eff
FROM     playerTank INNER JOIN
         player ON playerTank.playerId = player.id INNER JOIN
         tank ON playerTank.tankId = tank.id INNER JOIN
         tankType ON tank.tankTypeId = tankType.id INNER JOIN
         country ON tank.countryId = country.id;
GO


-- Create view for mapping Battle data

CREATE VIEW tankData2BattleMappingView
AS
SELECT   dbDataType, dbPlayerTank, dbBattle
FROM     json2dbMapping
WHERE    dbBattle IS NOT NULL
GROUP BY dbDataType, dbPlayerTank, dbBattle;
GO


-- create view for adding all achievments to all player tanks

CREATE VIEW playerTankAchAllView
AS
SELECT   playerTank.id AS playerTankId, ach.id AS achId
FROM     ach, playerTank;
GO